-- vim:syntax=lua
--
-- file: app1.conf

-- {{{ helper
function KB(value)
	return value * 1024;
end

function MB(value)
	return value * KB(1024);
end

function GB(value)
	return value * MB(1024);
end

function LoadModule(name)
	table.insert(Modules.Load, name);
end

function ModuleLoaded(name)
	for _, v in pairs(Modules.Load) do
		if v == name then
			return true;
		end
	end
	return false;
end

function PopulateErrorDocuments(codes, prefix, postfix)
	local result = {}

	for _, e in pairs(codes) do
		result[tostring(e)] = prefix .. tostring(e) .. postfix;
	end

	return result;
end
-- }}}

Modules = {
	Directory = '../src/plugins/';
	Load = {
		-- url mapper:
			'alias',
			'userdir',
			'indexfile',
		-- virtual hosting:
			'vhost_basic',
		-- debugging
			'debug',
		-- content generators:
			'dirlisting',
			'cgi',
			'sendfile',
		-- logger:
			'accesslog',
		-- output filter:
			'compress',
		-- other:
			'example',
			--'ssl',
	};
};

Log = {
	Mode = 'file';
	FileName = '/dev/stdout';
	Level = 'debug';
};

Resources = {
	MaxFiles = 4096;
	MaxAddressSpace = GB(3);
	MaxCoreFileSize = MB(768);

	MaxKeepAliveRequests = 16;
	MaxKeepAliveIdle = 5;

	MaxReadIdle = -1; -- 60;
	MaxWriteIdle = -1; -- 360;

	NumWorkers = 1; -- must be set to 1, currently (because this service is not yet thread safe)
};

FileInfo = {
	MimeType = {
		MimeFile = '/etc/mime.types';
		MagicFile = '/etc/mime.magic';
		DefaultType = 'application/octet-stream';
	};
	ETag = {
		ConsiderMtime = true;
		ConsiderSize = true;
		ConsiderInode = true;
	};
};

AccessLog = '/dev/stdout';

DirectoryListing = {
	Enabled = false;
	--XslUri = '/dirlisting.xsl'; -- use XML listing and link against this stylesheet URI
};

-- {{{ indexfile
if ModuleLoaded('indexfile') then
	IndexFiles = { 'index.html', 'index.htm', 'default.html', 'default.htm' };
end
-- }}}

-- {{{ userdir
if ModuleLoaded('userdir') then
	UserDir = {
		DocumentRoot = 'public_html';
		PathPrefix = '~';
	};
end
-- }}}

-- {{{ CGI
if ModuleLoaded('cgi') then
	CGI = {
		PathPrefix = '/cgi-bin/';
		Executable = true;
		Mappings = {
			['.php'] = '/usr/bin/php-cgi';
			['.rb'] = '/usr/bin/ruby';
			['.pl'] = '/usr/bin/perl';
			['.sh'] = '/bin/bash';
		};
	};
	if ModuleLoaded('indexfile') then
		table.insert(IndexFiles, 'index.php');
	end
end
-- }}}

ErrorDocuments = PopulateErrorDocuments({ -- {{{
	300, 301, 302, 304,
	400, 401, 403, 404, 416,
	500, 501, 502, 503
}, '../src/' .. 'error/', '.html');
-- }}}

-- {{{ virtual hosts
BindAddress = '0::0';
DefaultHost = 'localhost';

Hosts = {
	['localhost:8088'] = {
		ServerAliases = { 'local', 'azuko.ninchens.net' };
		BindAddress = '0::0';
		DocumentRoot = '.';
		IndexFiles = { 'index.html', 'index.xml' };
		Aliases = {
			['/dirlisting.xsl'] = './x0/dirlisting.xsl';
		};
		DirectoryListing = {
			Enabled = true;
			--XslUri = '/dirlisting.xsl';
		};
	};
}; -- }}}

------------------------------------------------------
--[[
for k, v in pairs(ErrorDocuments) do
	print(k, v);
end
for k, v in pairs(IndexFiles) do
	print(k, v);
end
print();
for k, v in pairs(CGI.Mappings) do
	print(k, v);
end
]]
