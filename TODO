INTERMEDIATE TODO

for a long-term todo list, see ticket system at code.ninchens.net/projects/x0

- handle request body if in.header("Content-Length") is set and ~= 0
- async/parralel content generator handlers
- set license from GPL-3 to LGPL-3

- improve configuration system
	- based on hierarichal contexts (with use of ternary_search<>)
- multi threaded multiplexing: per-CPU model

-----------------------------------------------------------
bool chat_listener::handle_request(request& in, response& out)
{
	this->request = &in;
	this->response = &out;

	out.header("Content-Type", "text/html; charset=utf-8");

	out.write(chatStreamHead());

	out.incomplete(true);// explicit flush indicates that there *MIGHT* be more to come, but we flush what we have.
	out.flush(); 

	return true;
}

void channel::say(const message& msg)
{
	for (auto i = members.begin(), e = members.end(); i != e; ++i)
	{
		auto member = *i;
		member->write(message);
	}
}
void member::write(const message& msg) {
	listener->response->write(msg.text());
	listener->response->flush();
}
void ChatSession::~ChatSession() {
	listener->response->finish();
}

response::finish() {
	flush();
}
response::flush() {
	ios.post(do_flush());
}
response::do_flush() {
	// write remaining data.
}








k
