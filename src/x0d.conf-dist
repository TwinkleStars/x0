-- vim:syntax=lua
--
-- file: x0d.conf
-- description: x0d web server configuration file

-- {{{ helper
function KB(value)
	return value * 1024;
end

function MB(value)
	return value * KB(1024);
end

function GB(value)
	return value * MB(1024);
end

function LoadModule(name)
	table.insert(Modules.Load, name);
end

function PopulateErrorDocuments(codes, prefix, postfix)
	local result = {}

	for _, e in pairs(codes) do
		result[tostring(e)] = prefix .. tostring(e) .. postfix;
	end

	return result;
end
-- }}}

PREFIX = '/usr/';
DATADIR = PREFIX .. 'share/x0/';

Daemon = {
	Group = 'x0d';
	User = 'x0d';
	Chroot = '/';
	Nice = 0;
};

ServerTag = 'x0';

Modules = {
	Directory = '/usr/libexec/x0/';
	Load = { 'dirlisting', 'userdir', 'indexfile', 'cgi', 'sendfile', 'vhost', 'accesslog' };
	-- { 'dirlisting', 'userdir', 'indexfile', 'cgi', 'sendfile', 'vhost', 'accesslog', 'debug' };
};

Log = {
	Mode = 'file';
	FileName = 'error.log';
	Level = 'warn';
};

Resources = {
	MaxFiles = 2048;
	MaxAddressSpace = GB(2);
	MaxCoreFileSize = MB(500);

	MaxKeepAliveRequests = 16;
	MaxKeepAliveIdle = 5;

	MaxConnections = 1024;
	MaxReadIdle = 60;
	MaxWriteIdle = 360;

	NumWorkers = 1; -- must be set to 1, currently (because this service is not yet thread safe)
};

FileInfo = {
	MimeType = {
		MimeFile = '/etc/mime.types';
		MagicFile = '/etc/mime.magic';
		DefaultType = 'application/octet-stream';
	};
	ETag = {
		ConsiderMtime = true;
		ConsiderSize = true;
		ConsiderInode = true;
	};
};

AccessLog = 'access.log';

IndexFiles = { 'index.html', 'index.xml' };

Userdir = {
	DocumentRoot = 'public_html';
	PathPrefix = '~';
};

Compress = {
	ContentTypes = { 'text/plain', 'text/html', 'text/xml', 'text/x-c++src' };
	Level = 9;
	MinSize = 32;
	MaxSize = MB(128);
};

CGI = {
	PathPrefix = '/cgi-bin/';
	Executable = true;
	Mappings = {
		['.php'] = '/usr/bin/php';
		['.rb'] = '/usr/bin/ruby';
		['.pl'] = '/usr/bin/perl';
		['.sh'] = '/bin/bash';
	};
};

Aliases = {
	['/error/'] = DATADIR .. 'error/';
	['/icon/'] = DATADIR .. 'icon/';
};

ErrorDocuments = PopulateErrorDocuments({
	300, 301, 302, 304,
	400, 401, 403, 404, 416,
	500, 501, 502, 503
}, DATADIR .. 'error/', '.html');

BindAddress = '0::0';
DefaultHost = 'localhost';

Hosts = {
	['localhost:8080'] = {
		DocumentRoot = '/var/www/localhost/htdocs';
		Aliases = {
			['/distfiles'] = '/usr/portage/distfiles';
		};
	};
	['www.cooldown.net:8080'] = {
		DocumentRoot = '/var/www/cooldown.net/htdocs';
		Listen = 8081;
	};
};

--if table.contains(Modules.Load, 'cgi') then
--	table.insert(IndexFile, 'index.php');
--	CGI.Mapping['.php'] = '/usr/bin/php-cgi';
--end

IGNORES = {'PREFIX', 'DATADIR'}

------------------------------------------------------
--[[for k, v in pairs(ErrorDocuments) do
	print(k, v);
end ]]
