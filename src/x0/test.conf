-- vim:syntax=lua
--
-- file: x0d.conf
-- description: x0d web server configuration file

-- {{{ helper
function KB(value)
	return value * 1024;
end

function MB(value)
	return value * KB(1024);
end

function GB(value)
	return value * MB(1024);
end

function LoadModule(name)
	table.insert(Modules.Load, name);
end

function PopulateErrorDocuments(codes, prefix, postfix)
	local result = {}

	for _, e in pairs(codes) do
		result[e] = prefix .. tostring(e) .. postfix;
	end

	return result;
end
-- }}}

PREFIX = '/opt/sandbox/';
DATADIR = PREFIX .. 'share/x0/';
STATEDIR = './';

Daemon = {
	Group = 'x0d';
	User = 'x0d';
	Chroot = '/';
	Nice = 0;
	PidFile = STATEDIR .. 'x0d.pid';
};

ServerTag = 'x0';

Modules = {
	Directory = '.';
--	Load = { 'vhost', 'sendfile' };
	Load = {
		'userdir', 'indexfile', -- url mapper
		'vhost_basic',
		'dirlisting', 'cgi', 'sendfile', -- content generators
		'accesslog' -- logger
	};
};

Log = {
	Mode = 'file';
	FileName = '/dev/stdout';
	Level = 'debug';
};

Resources = {
	MaxFiles = 4096;
	MaxAddressSpace = GB(3);
	MaxCoreFileSize = MB(768);

	MaxKeepAliveRequests = 16;
	MaxKeepAliveIdle = 5;

	MaxReadIdle = 60;
	MaxWriteIdle = 360;

	NumWorkers = 1; -- must be set to 1, currently (because this service is not yet thread safe)
};

FileInfo = {
	MimeType = {
		MimeFile = '/etc/mime.types';
		MagicFile = '/etc/mime.magic';
		DefaultType = 'text/plain';
	};
	ETag = {
		ConsiderMtime = true;
		ConsiderSize = true;
		ConsiderInode = true;
	};
};

AccessLog = '/dev/stdout';

IndexFiles = { 'index.html', 'index.xml' };

Userdir = {
	DocumentRoot = 'public_html';
	PathPrefix = '~';
};

CGI = {
	PathPrefix = '/cgi-bin/';
	Executable = true;
	Mappings = {
		['.php'] = '/usr/bin/php-cgi';
		['.rb'] = '/usr/bin/ruby';
		['.pl'] = '/usr/bin/perl';
		['.sh'] = '/bin/bash';
	};
};

FastCGI = {
	Mappings = {
		['.php'] = {
			Backend = '/usr/bin/php-fcgi';
			MinInstances = 1;
			MaxInstances = 1;
			ResetEnv = true;
			SetEnv = {
				['PATH'] = '/usr/local/bin:/usr/bin';
				['CUSTOM'] = 'hello';
			};
		};
	};
	ApplicationScopes = {
		['/yacs'] = {
			Backend = '/usr/local/bin/yacs-fcgi';
			MinInstances = 1;
			MaxInstances = 1;
			ResetEnv = true;
			SetEnv = {
				['PATH'] = '/usr/local/bin:/usr/bin';
				['CUSTOM'] = 'hello';
			};
		};
	};
};

Aliases = {
	['/error/'] = DATADIR .. 'error/';
	['/icon/'] = DATADIR .. 'icon/';
};

ErrorDocuments = PopulateErrorDocuments({
	300, 301, 302, 304,
	400, 401, 403, 404, 416,
	500, 501, 502, 503
}, DATADIR .. 'error/', '.html');

FileSystem = {
	['/home/*/public_html'] = {
		DirectoryListing = true;
		AllowFrom = { '192.168.0.0/24' };
	};
	['/var/www/*/htdocs'] = {
		AllowFrom = { '0.0.0.0/0' };
	};
};

-- plugin: vhost_template
HostTemplate = {
	Listener = 8080;
	BindAddress = '0::0';

	ServerRoot = '/var/www/';
	DefaultHost = 'localhost';
	DocumentRoot = 'htdocs';
};

-- plugin: vhost_sql
VirtualHostSql = {
	Listener = 8080;
	BindAddress = '0::0';

	Query = 'SELECT docroot FROM HostVars WHERE hostname=%1';
	DefaultHost = 'localhost';
};

-- plugin: vhost_basic
BindAddress = '0::0';
DefaultHost = 'localhost';

Hosts = {
	['localhost:8080'] = {
		DocumentRoot = '/var/www/localhost/htdocs';
		BindAddress = '0::0';
		ServerAliases = { 'local', 'azuko.ninchens.net' };
		IndexFiles = { 'index.php', 'index.html', 'index.xml' };
		Aliases = {
			['/distfiles'] = '/usr/portage/distfiles';
		};
	};
	['www.cooldown.net:8081'] = {
		DocumentRoot = '/home/trapni/public_html';
		BindAddress = 'localhost';
	};
};

Listeners = {
	[8080] = {
		DefaultHost = 'localhost';
	};
};

--if table.contains(Modules.Load, 'cgi') then
--	table.insert(IndexFile, 'index.php');
--	CGI.Mapping['.php'] = '/usr/bin/php-cgi';
--end

------------------------------------------------------
--[[for k, v in pairs(ErrorDocuments) do
	print(k, v);
end ]]
