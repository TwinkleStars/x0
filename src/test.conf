-- vim:syntax=lua
--
-- file: x0d.conf
-- description: x0d web server configuration file

-- {{{ helper
function KB(value)
	return value * 1024;
end

function MB(value)
	return value * KB(1024);
end

function GB(value)
	return value * MB(1024);
end

function LoadPlugin(name)
	table.insert(Plugins.Load, name);
end

function PluginLoaded(name)
	for _, v in pairs(Plugins.Load) do
		if v == name then
			return true;
		end
	end
	return false;
end

function PopulateErrorDocuments(codes, prefix, postfix)
	local result = {}

	for _, e in pairs(codes) do
		result[tostring(e)] = prefix .. tostring(e) .. postfix;
	end

	return result;
end
-- }}}

DATADIR = './';

Plugins = {
	Directory = './plugins/';
	Load = {
		-- url mapper:
			'alias',
			'userdir',
			'indexfile',
		-- virtual hosting:
			'vhost_basic',
		-- content generators:
			'proxy/proxy',
			'dirlisting',
			--'cgi',
			'staticfile',
		-- logger:
			'accesslog',
		-- other:
			'hello_example',
			'echo_example',
			'filter_example',
			'compress',
			'ssl/ssl',
		-- debugging
			--'debug',
	};
};

Log = {
	Mode = 'stderr';
	FileName = '/dev/stdout';
	Level = 'debug';
	Colorize = true;
};

Resources = {
	MaxFiles = 4096;
	MaxAddressSpace = GB(3);
	MaxCoreFileSize = MB(768);

	MaxConnections = 1024;
	MaxKeepAliveIdle = 0; --5;

	MaxReadIdle = 10;
	MaxWriteIdle = 10;

	TCP_CORK = true;     --[[ default: false ]]
	TCP_NODELAY = false; --[[ default: false ]]
};

FileInfo = {
	MimeType = {
		MimeFile = '/etc/mime.types';
		MagicFile = '/etc/mime.magic';
		DefaultType = 'application/octet-stream';
	};
	ETag = {
		ConsiderMtime = true;
		ConsiderSize = true;
		ConsiderInode = true;
	};
};

AccessLog = '/dev/stdout';

DirectoryListing = false;

Advertise = true; --[[ default: true ]]

-- {{{ indexfile
if PluginLoaded('indexfile') then
	IndexFiles = { 'index.html', 'index.htm', 'default.html', 'default.htm' };
end
-- }}}

-- {{{ userdir
if PluginLoaded('userdir') then
	UserDir = 'public_html';
end
-- }}}

-- {{{ compress
if PluginLoaded('compress') then
	CompressTypes = { 'text/plain', 'text/html', 'text/xml', 'text/x-c++src' };
	CompressLevel = 9;
	CompressMinSize = 4; -- 16; -- 256
	CompressMaxSize = MB(128);
end
-- }}}

-- {{{ CGI
if PluginLoaded('cgi') then
	CGI = {
		PathPrefix = '/cgi-bin/';
		Executable = true;
		Mappings = {
			['.php'] = '/usr/bin/php-cgi';
			['.rb'] = '/usr/bin/ruby';
			['.pl'] = '/usr/bin/perl';
			['.sh'] = '/bin/bash';
		};
	};
	if PluginLoaded('indexfile') then
		table.insert(IndexFiles, 'index.php');
	end
end
-- }}}

Aliases = { -- {{{
	['/error/'] = DATADIR .. 'error/';
	['/icon/'] = DATADIR .. 'icon/';
	['/trapni/'] = '/home/trapni/';
}; -- }}}

ErrorDocuments = PopulateErrorDocuments({ -- {{{
	300, 301, 302, 304,
	400, 401, 403, 404, 416,
	500, 501, 502, 503
}, DATADIR .. 'error/', '.html');
-- }}}

-- {{{ plugin: vhost_template
if PluginLoaded('vhost_template') then
	HostTemplate = {
		Listener = 8089;
		BindAddress = '0::0';

		ServerRoot = '/var/www/';
		DefaultHost = 'localhost';
		DocumentRoot = 'htdocs';
	};
end
-- }}}

SslLogLevel = 6;
Hosts = {
	['www.trapni.de:8088'] = {
		ServerAliases = { 'testbed.trapni.de', 'shougar', 'battousai' };
		BindAddress = '0::0';
		DocumentRoot = '/var/www/localhost/htdocs';
		DirectoryListing = true;
		UserDir = 'public_html';
		Aliases = {
			['/yacs'] = '/home/trapni/projects/yacs';
		};
		FilterExample = false;
		--Default = true;
		SslEnabled = true;
		SslKeyFile = '/home/trapni/projects/x0/src/test.key';
		SslCertFile = '/home/trapni/projects/x0/src/test.crt';
	};
	['localhost:8089'] = {
		BindAddress = '0::0';
		ServerAliases = { 'local', 'azuko.ninchens.net' };
		Default = true;

		DocumentRoot = '/var/www/localhost/htdocs';

		IndexFiles = { 'index.php', 'index.html', 'index.xml' };

		Aliases = {
			['/dirlisting.xsl'] = '/home/trapni/projects/x0/src/x0/dirlisting.xsl';
			['/yacs'] = '/home/trapni/projects/yacs';
		};

		DirectoryListing = true;

		ProxyEnable = false;
		ProxyOrigins = { 'http://dev.ninchens.net:8081/' };
		ProxyHotSpares = { 'http://localhost:81/' };
		ProxyMode = "reverse";
		ProxyConnectTimeout = 8;
		ProxyKeepAliveTimeout = 0;
		ProxyMethods = { 'PROPFIND', 'MKCOL' };
	};
};

IGNORES = { 'KB', 'MB', 'GB', 'PluginLoaded', 'LoadPlugin', 'PopulateErrorDocuments', 'DATADIR' }
