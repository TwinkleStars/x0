-- vim:syntax=lua
--
-- file: x0d.conf
-- description: x0d web server configuration file

-- {{{ helper
function KB(value)
	return value * 1024;
end

function MB(value)
	return value * KB(1024);
end

function GB(value)
	return value * MB(1024);
end

function LoadModule(name)
	table.insert(Modules.Load, name);
end

function ModuleLoaded(name)
	for _, v in pairs(Modules.Load) do
		if v == name then
			return true;
		end
	end
	return false;
end

function PopulateErrorDocuments(codes, prefix, postfix)
	local result = {}

	for _, e in pairs(codes) do
		result[tostring(e)] = prefix .. tostring(e) .. postfix;
	end

	return result;
end
-- }}}

DATADIR = './';

Modules = {
	Directory = './plugins/';
	Load = {
		-- url mapper:
			'alias',
			'userdir',
			'indexfile',
		-- virtual hosting:
			'vhost_basic',
		-- content generators:
			'proxy',
			'dirlisting',
			'cgi',
			'sendfile',
		-- logger:
			'accesslog',
		-- other:
			'example',
--			'compress',
		-- debugging
			--'debug',
	};
};

Log = {
	Mode = 'stderr';
	FileName = '/dev/stdout';
	Level = 'debug';
	Colorize = true;
};

Resources = {
	MaxFiles = 4096;
	MaxAddressSpace = GB(3);
	MaxCoreFileSize = MB(768);

	MaxConnections = 1024;
	MaxKeepAliveRequests = 16;
	MaxKeepAliveIdle = 5;

	MaxReadIdle = 10;
	MaxWriteIdle = 10;

	TCP_CORK = true;     --[[ default: false ]]
	TCP_NODELAY = false; --[[ default: false ]]
};

FileInfo = {
	MimeType = {
		MimeFile = '/etc/mime.types';
		MagicFile = '/etc/mime.magic';
		DefaultType = 'application/octet-stream';
	};
	ETag = {
		ConsiderMtime = true;
		ConsiderSize = true;
		ConsiderInode = true;
	};
};

AccessLog = '/dev/stdout';

DirectoryListing = {
	Enabled = false;
};

--Advertise = false;

-- {{{ indexfile
if ModuleLoaded('indexfile') then
	IndexFiles = { 'index.html', 'index.htm', 'default.html', 'default.htm' };
end
-- }}}

-- {{{ userdir
if ModuleLoaded('userdir') then
	UserDir = {
		DocumentRoot = 'public_html';
		PathPrefix = '~';
	};
end
-- }}}

-- {{{ compress
if ModuleLoaded('compress') then
	Compress = {
		ContentTypes = { 'text/plain', 'text/html', 'text/xml', 'text/x-c++src' };
		Level = 9;
		MinSize = 16; -- 256;
		MaxSize = MB(128);
	};
end
-- }}}

-- {{{ CGI
if ModuleLoaded('cgi') then
	CGI = {
		PathPrefix = '/cgi-bin/';
		Executable = true;
		Mappings = {
			['.php'] = '/usr/bin/php-cgi';
			['.rb'] = '/usr/bin/ruby';
			['.pl'] = '/usr/bin/perl';
			['.sh'] = '/bin/bash';
		};
	};
	if ModuleLoaded('indexfile') then
		table.insert(IndexFiles, 'index.php');
	end
end
-- }}}

Aliases = { -- {{{
	['/error/'] = DATADIR .. 'error/';
	['/icon/'] = DATADIR .. 'icon/';
}; -- }}}

ErrorDocuments = PopulateErrorDocuments({ -- {{{
	300, 301, 302, 304,
	400, 401, 403, 404, 416,
	500, 501, 502, 503
}, DATADIR .. 'error/', '.html');
-- }}}

-- {{{ plugin: vhost_template
if ModuleLoaded('vhost_template') then
	HostTemplate = {
		Listener = 8089;
		BindAddress = '0::0';

		ServerRoot = '/var/www/';
		DefaultHost = 'localhost';
		DocumentRoot = 'htdocs';
	};
end
-- }}}

Hosts = {
	['localhost:8088'] = {
		BindAddress = '0::0';
		Default = true;
		DocumentRoot = '/home/trapni/projects/yacs/src/web';
		Proxy = {
			Origins = {
				"http://www.irony-of-fate.de/",
			};
		};
	};
	['localhost:8089'] = {
		BindAddress = '0::0';
		ServerAliases = { 'local', 'azuko.ninchens.net' };
		Default = true;
		DocumentRoot = '/var/www/localhost/htdocs';
		IndexFiles = { 'index.php', 'index.html', 'index.xml' };
		Aliases = {
			['/dirlisting.xsl'] = '/home/trapni/projects/x0/src/x0/dirlisting.xsl';
			['/yacs'] = '/home/trapni/projects/yacs';
		};
		DirectoryListing = {
			Enabled = true;
			XslUri = '/dirlisting.xsl';
		};
		['/forum'] = {
			Proxy = {
				Origins = { 'http://localhost:81/' };
			};
			BLAH = 3;
		};
	};
};

IGNORES = { 'KB', 'MB', 'GB', 'ModuleLoaded', 'LoadModule', 'PopulateErrorDocuments', 'DATADIR' }
