# x0 (xzero) HTTP web server: configuration file.
# vim:syntax=flow
#
# NOTE this file is for development purposes only and does not serve as a
# production-example. The contents of this file may change on every commit
# and may not contain any useful contents or comments.
#
# Please see the examples/ directory for real x0 and x0d configuration examples.

# require 'x0/1.0.0'

import 'dirlisting' from 'plugins'
import 'userdir' from 'plugins'
import 'accesslog' from 'plugins'
import 'cgi' from 'plugins'
import 'fastcgi' from 'plugins'
import 'proxy' from 'plugins'

import 'vhost' from 'plugins'
import 'status' from 'plugins'
import 'browser' from 'plugins'
import 'expire' from 'plugins'
import 'debug' from 'plugins'
#import 'rrd' from 'plugins'
#import 'ssl' from 'plugins/ssl'

# rules to be invoked at service startup
handler setup
{
	log.level 9

	max_read_idle 10 sec
	max_write_idle 30 sec
	max_keepalive_idle 10 sec
	max_keepalive_requests 0

	max_core_size 512 mbyte
	max_files 8192

	max_connections 4050
	max_request_uri_size 2 kbyte
	max_request_header_size 8 kbyte
	max_request_header_count 50
	max_request_body_size 1 mbyte

	# mimetypes
	mimetypes '/etc/mime.types'
	mimetypes.default 'text/plain'

	# HTTPS (SSL)
#	ssl.listen 'bind' => ::, 'port' => 3443
#	ssl.loglevel 9
#	ssl.context 'certfile' => '/home/trapni/projects/ialu/ssl/ialu.de.crt',
#				'keyfile' => '/home/trapni/projects/ialu/ssl/ialu.de.key'

	# HTTP
	listen 'bind' => ::, 'port' => 8081, 'backlog' => 128
	#listen 'bind' => '/tmp/x0d.sock'

	cgi.mapping '.php' => '/usr/lib64/php5.2/bin/php-cgi'

	workers 1

	browser.modern "AppleWebKit", "534.30"    # a recent Chromium (on my linux box)
	browser.modern "Gecko", "20100101"        # Firefox 4.0.1 (windows official release)
	browser.ancient "Trident"                 # MSIE-based browsers

	vhost.mapping 'localhost' => localhost,
				  'localhost.ninchens.net' => ninchens,
				  'ninchens.ialu.de' => ninchens,
				  'ninchens.net' => ninchens,
				  'ialu.de' => ialu,
	              'localhost.ialu.de' => ialu

	#rrd.filename "/home/trapni/projects/x0/www/htdocs/rrd/x0d.rrd"
	#rrd.step 60
}

handler main
{
	#FIXME: why? accesslog '/dev/stdout'
	if req.path == '/favicon.ico' {
		expire 30 mins
		respond 404
	}

	#rrd
	status if req.path == '/server-status'
	vhost.map

	ialu if req.host =~ /.*\.ialu.de/
	localhost
}

# {{{ helper handlers
handler cgi
{
	pathinfo
	cgi.exec if phys.path =$ '.cgi'
	cgi.prefix '/cgi-bin/' => '/var/www/localhost/cgi-bin/'
	cgi.map
	#fastcgi "127.0.0.1:2004" if phys.path =$ '.php'
}

handler default {
	autoindex 'index.php', 'index.html'
	cgi
	staticfile
	dirlisting
}
# }}}

handler my_error { # {{{
	__print "in error handler: ", req.status
	rewrite "/error.html"
	staticfile
} # }}}

# {{{ hosts
handler localhost
{
	blank if req.path == '/blank'

	debug.coredump if req.path == "/core"
	debug.coredump.post if req.path == "/core/post"

	error.handler my_error
	accesslog '/dev/stdout'
	docroot '/home/trapni/projects/x0/www/htdocs'
	alias '/distfiles' => '/usr/portage/distfiles'
	userdir
	default
}

handler ninchens
{
	accesslog '/dev/stdout'
	docroot '/home/trapni/projects/yacs/web'
	autoindex ['index.csp']
	staticfile if not phys.path =$ '.csp'
	fastcgi 'path' => '/tmp/yacsd.socket' #if req.path =^ '/chat/listen' or phys.path =$ '.csp'
	#fastcgi 'address' => 127.0.0.1, 'port' => 1234 #if req.path =^ '/chat/listen' or phys.path =$ '.csp'
}

handler ialu
{
	accesslog '/dev/stdout'

	# keep old/incompatible browsers out
	respond 403 if browser.is_ancient()

	docroot '/home/trapni/projects/ialu/public'
	alias '/rrd/' => '/home/trapni/projects/x0/www/htdocs/rrd/'
	dirlisting if req.path =^ '/rrd/'
	cgi.exec if phys.path =$ '.cgi'

	expire 1 day if phys.exists and req.path =^ '/static/'
	staticfile

	if req.path =~ /^\/chat\/(listen|activity|send)$/ {
		# chat app
		fastcgi 'path' => '/tmp/ialu-chat.socket'
	} else {
		# rails app
		#fastcgi 'unix:/tmp/ialu-web.socket'
		#proxy.reverse 'path' => '/tmp/ialu-web.socket'
		proxy.reverse 'address' => 127.0.0.1, 'port' => 8080
	}
}
# }}}
