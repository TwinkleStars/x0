# x0 (xzero) HTTP web server: sample configuration file.
# vim:syntax=flow

extern int printf(string, ...);

// require 'x0/1.0.0';

# rules to be invoked at service startup
handler setup
{
	plugins ('dirlisting', 'staticfile', 'fastcgi');
	plugins ('echo_example', 'hello_example');

	//plugins ('ssl', 'commpress');
	//plugins ('accesslog', 'alias', 'indexfile');
	//plugins 'filter_example';

//	mimetypes '/etc/mime.types';

	listen '0.0.0.0:8080';

//	accesslog (sys.env('HOME') + 'logs/access.log');

	printf "Setup complete. Process ID: %d, cwd:%s\n", sys.pid, sys.cwd + '/';
}

# hooks into service shutdown.
handler shutdown
{
	__print "Good bye";
}

handler reload
{
	__print "Reloading";
}

# processes CGI programs via TCP/IP using the fastcgi protocol as wrapper:
handler cgi
{
	if req.path =^ '/cgi-bin'
	{
		# set document-root to fixed one
		docroot '/var/www/cgi-bin';

		# pass control of this request to fastcgi's cgi-fcgi handler.
		fastcgi '127.0.0.1:2001';
	}

	if req.path =$ '.cgi' and req.is_exe
	{
		fastcgi '127.0.0.1:2001';
	}
}

# processes PHP files via php-cgi, connected via unix domain socket through the fastcgi protocol:
handler php if path =$ '.php' then fastcgi '127.0.0.1:2002';

handler yacs
{
	if path =$ '.csp' or path =^ '/chat/listen'
	{
		fastcgi '127.0.0.1:2003';
	}
}

/* handler public_html
{
	if path =^ '/~'
	{
		userdir;
		dirlisting;
	}
} */

handler main
{
	__print sys.now_str, req.host, req.remoteip, req.localport, req.path;

	if req.path =^ '/hello' then hello_example;
	else if req.path =^ '/echo' then echo_example;

	if (req.host == 'localhost')
	{
		if req.remoteip != '127.0.0.1' then respond 403;

		docroot '/var/www/localhost/htdocs';
	}
	else if (req.host == 'shougar')
	{
		docroot '/home/trapni/projects/x0/src';

		if (req.path =^ '/hello')
			respond 403;

		dirlisting;
	}
	else
		docroot '/home/trapni/projects';

	if (phys.exists and req.path =$ '.php')
		respond 403;

	staticfile;

	respond 404;
}
